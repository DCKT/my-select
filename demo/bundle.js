(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';

var Select = require('../lib/select');

document.addEventListener('DOMContentLoaded', function () {
  var select = new Select({
    select: '.test',
    container: '#bloc' });

  select.on('change', function (value) {
    console.log(value);
  });
}, false);

},{"../lib/select":5}],2:[function(require,module,exports){
'use strict';

var _CLASSNAME = require('./constants.js');

module.exports = function (option, select, _this) {
  option.addEventListener('click', function () {
    var id = this.getAttribute('data-select-id');
    select.value = this.getAttribute('data-value');
    _this.selectedValue = this.getAttribute('data-value');
    document.querySelector('.' + _CLASSNAME.CLASSNAME.LABEL + '-' + id).innerHTML = this.innerHTML;
    _this.hideLists();
    _this.events.change ? _this.events.change(_this.selectedValue) : null;
  }, false);
};

},{"./constants.js":3}],3:[function(require,module,exports){
'use strict';

module.exports = {
  CLASSNAME: {
    LABEL: 'js-myselect-label',
    LABEL_FOCUS: 'js-myselect-label--focus',
    LIST_VALUES: 'js-myselect-list-values',
    LIST_VALUES_VISIBLE: 'js-myselect-list-values--visible',
    ITEM: 'js-myselect-item' } };

},{}],4:[function(require,module,exports){
'use strict';

var _interopRequireWildcard = function (obj) { return obj && obj.__esModule ? obj : { 'default': obj }; };

var _CLASSNAME = require('./constants.js');

var _showDropdown = require('./showDropDown.js');

var _showDropdown2 = _interopRequireWildcard(_showDropdown);

var _bindClickOptions = require('./bindClickOptions.js');

var _bindClickOptions2 = _interopRequireWildcard(_bindClickOptions);

module.exports = function (select, container, id) {
  var _this2 = this;

  var label = document.createElement('div');
  var valuesList = document.createElement('div');
  var _this = this;

  label.className = '' + _CLASSNAME.CLASSNAME.LABEL + ' ' + _CLASSNAME.CLASSNAME.LABEL + '-' + id;
  valuesList.className = _CLASSNAME.CLASSNAME.LIST_VALUES;

  label.innerHTML = select.selectedOptions[0].innerHTML;

  label.addEventListener('click', function (e) {
    if (_this.isDevice && _this.nativeOnDevice) {
      _this.showDropdown(select);
    } else {
      this.classList.add(_CLASSNAME.CLASSNAME.LABEL_FOCUS);
      this.nextSibling.classList.add(_CLASSNAME.CLASSNAME.LIST_VALUES_VISIBLE);
    }
  });

  this.fakeSelect = label;

  [].forEach.call(select.children, function (option, index) {
    var divOption = document.createElement('div');

    divOption.className = _CLASSNAME.CLASSNAME.ITEM;
    divOption.innerHTML = option.innerHTML;
    divOption.setAttribute('data-value', option.getAttribute('value'));
    divOption.setAttribute('data-select-id', id);
    valuesList.appendChild(divOption);

    _bindClickOptions2['default'](divOption, select, _this2);
  });

  container.appendChild(label);
  container.appendChild(valuesList);
};

},{"./bindClickOptions.js":2,"./constants.js":3,"./showDropDown.js":6}],5:[function(require,module,exports){
"use strict";function bindClickOut() {
  var e = this;document.addEventListener("click", function (t) {
    var n = t.target.classList;n.contains(_CLASSNAME.CLASSNAME.LABEL) || n.contains(_CLASSNAME.CLASSNAME.ITEM) || e.hideLists();
  }, !1);
}var _interopRequireWildcard = function _interopRequireWildcard(e) {
  return e && e.__esModule ? e : { "default": e };
},
    _classCallCheck = function _classCallCheck(e, t) {
  if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
},
    _createClass = (function () {
  function e(e, t) {
    for (var n = 0; n < t.length; n++) {
      var i = t[n];i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(e, i.key, i);
    }
  }return function (t, n, i) {
    return (n && e(t.prototype, n), i && e(t, i), t);
  };
})(),
    _CLASSNAME = require("./constants.js"),
    _createDOMElements = require("./createDOMElements.js"),
    _createDOMElements2 = _interopRequireWildcard(_createDOMElements),
    i = 0,
    Select = (function () {
  function e(t) {
    if ((_classCallCheck(this, e), !t || !t.select || !t.container)) {
      return void console.error("my-select error : Missing options");
    }var n = t.select,
        r = t.container;return (this.select = document.querySelector(n), this.container = document.querySelector(r), this.selectedValue = null, this.fakeSelect = null, this.events = {}, this.id = i, this.nativeOnDevice = !!t.nativeOnDevice, this.isDevice = "ontouchstart" in document.documentElement, this.select ? this.container ? (_createDOMElements2["default"].call(this, this.select, this.container, this.id), void bindClickOut.call(this)) : void console.error("my-select error : container Node not found") : void console.error("my-select error : select Node not found"));
  }return (_createClass(e, [{ key: "hideLists", value: function value() {
      this.fakeSelect.classList.remove(_CLASSNAME.CLASSNAME.LABEL_FOCUS), this.fakeSelect.nextSibling.classList.remove(_CLASSNAME.CLASSNAME.LIST_VALUES_VISIBLE);
    } }, { key: "on", value: function value(e, t) {
      this.events[e] = t.bind(this);
    } }]), e);
})();module.exports = Select;

},{"./constants.js":3,"./createDOMElements.js":4}],6:[function(require,module,exports){
'use strict';

module.exports = function (element) {
  var event;
  event = document.createEvent('MouseEvents');
  event.initMouseEvent('mousedown', true, true, window);
  element.dispatchEvent(event);
};

},{}]},{},[1])
//# sourceMappingURL=data:application/json;base64,
