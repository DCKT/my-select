(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';

var Select = require('../lib/select');

document.addEventListener('DOMContentLoaded', function () {
  var selects = new Select();
  selects.init();

  selects.on('change', function (index) {});
}, false);

},{"../lib/select":2}],2:[function(require,module,exports){
"use strict";var _classCallCheck = function _classCallCheck(e, t) {
  if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
},
    _createClass = (function () {
  function e(e, t) {
    for (var s = 0; s < t.length; s++) {
      var n = t[s];n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n);
    }
  }return function (t, s, n) {
    return (s && e(t.prototype, s), n && e(t, n), t);
  };
})();Object.defineProperty(exports, "__esModule", { value: !0 });var Select = (function () {
  function e(t) {
    var s = this;_classCallCheck(this, e), this.selects = document.querySelectorAll(t && t.select || ".js-mySelect"), this.wrappers = document.querySelectorAll(".js-mySelect-Wrapper"), this.lists = [], this.events = [], this.selects.length != this.wrappers.length && (this.error = "mySelect Error : selects and wrappers length not equal"), document.addEventListener("click", function (e) {
      var t = e.target.classList;t.contains("js-mySelect-Container") || t.contains("js-mySelect-Item") || s.hideLists();
    }, !1);
  }return (_createClass(e, [{ key: "init", value: function value() {
      var e = this;return this.error ? void console.error(this.error) : void [].forEach.call(this.selects, function (t, s) {
        var n = e,
            i = document.createElement("div"),
            l = document.createElement("div"),
            r = document.createElement("div");i.className = "js-mySelect js-mySelect-" + s, l.className = "js-mySelect-Container js-mySelect-Container-" + s, l.innerHTML = t.selectedOptions[0].innerHTML, r.className = "js-mySelect-List js-mySelect-List-" + s, l.addEventListener("click", function () {
          this.classList.add("js-mySelect-Container--open"), this.nextSibling.classList.add("js-mySelect-List--visible");
        }, !1), [].forEach.call(t.children, function (e, t) {
          var i = document.createElement("div");i.className = "js-mySelect-Item", i.innerHTML = e.innerHTML, i.setAttribute("data-value", e.getAttribute("value")), i.setAttribute("data-select-id", s), r.appendChild(i), i.addEventListener("click", function () {
            var e = this.getAttribute("data-select-id");document.querySelector(".js-mySelect-Container-" + e).innerHTML = this.innerHTML, n.selects[e].value = this.getAttribute("data-value"), n.hideLists(), n.events.change ? n.events.change(e) : null;
          }, !1);
        }), i.appendChild(l), i.appendChild(r), e.wrappers[s].appendChild(i), e.lists.push(r);
      });
    } }, { key: "hideLists", value: function value() {
      this.lists.forEach(function (e) {
        e.previousSibling.classList.remove("js-mySelect-Container--open"), e.classList.remove("js-mySelect-List--visible");
      });
    } }, { key: "on", value: function value(e, t) {
      this.events[e] = t.bind(this);
    } }]), e);
})();exports["default"] = Select, module.exports = exports["default"];

},{}]},{},[1])
//# sourceMappingURL=data:application/json;base64,
