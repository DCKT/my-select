(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';

var Select = require('../lib/select');

document.addEventListener('DOMContentLoaded', function () {
  var selects = new Select();
  selects.init();
}, false);

},{"../lib/select":2}],2:[function(require,module,exports){
"use strict";var _classCallCheck = function _classCallCheck(e, t) {
  if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
},
    _createClass = (function () {
  function e(e, t) {
    for (var n = 0; n < t.length; n++) {
      var s = t[n];s.enumerable = s.enumerable || !1, s.configurable = !0, "value" in s && (s.writable = !0), Object.defineProperty(e, s.key, s);
    }
  }return function (t, n, s) {
    return (n && e(t.prototype, n), s && e(t, s), t);
  };
})();Object.defineProperty(exports, "__esModule", { value: !0 });var Select = (function () {
  function e(t) {
    var n = this;_classCallCheck(this, e), this.selects = document.querySelectorAll(t && t.select ? t.select : ".js-mySelect"), this.wrappers = document.querySelectorAll(".js-mySelect-Wrapper"), this.lists = [], this.events = [], this.nativeOnDevice = t && "undefined" != typeof t.nativeOnDevice ? t.nativeOnDevice : !0, this.isDevice = "ontouchstart" in document.documentElement, this.selects.length != this.wrappers.length && (this.error = "mySelect Error : selects and wrappers length not equal"), document.addEventListener("click", function (e) {
      var t = e.target.classList;t.contains("js-mySelect-Container") || t.contains("js-mySelect-Item") || n.hideLists();
    }, !1);
  }return (_createClass(e, [{ key: "showDropdown", value: function value(e) {
      var t;t = document.createEvent("MouseEvents"), t.initMouseEvent("mousedown", !0, !0, window), e.dispatchEvent(t);
    } }, { key: "init", value: function value() {
      var e = this;return this.error ? void console.error(this.error) : void [].forEach.call(this.selects, function (t, n) {
        var s = e,
            i = document.createElement("div"),
            c = document.createElement("div"),
            a = document.createElement("div");i.className = "js-mySelect js-mySelect-" + n, c.className = "js-mySelect-Container js-mySelect-Container-" + n, c.innerHTML = t.selectedOptions[0].innerHTML, a.className = "js-mySelect-List js-mySelect-List-" + n, c.addEventListener("click", function () {
          s.isDevice && s.nativeOnDevice ? s.showDropdown(t) : (this.classList.add("js-mySelect-Container--open"), this.nextSibling.classList.add("js-mySelect-List--visible"));
        }, !1), s.isDevice && t.addEventListener("change", function () {
          c.innerHTML = this.value;
        }), [].forEach.call(t.children, function (e, t) {
          var i = document.createElement("div");i.className = "js-mySelect-Item", i.innerHTML = e.innerHTML, i.setAttribute("data-value", e.getAttribute("value")), i.setAttribute("data-select-id", n), a.appendChild(i), i.addEventListener("click", function () {
            var e = this.getAttribute("data-select-id");document.querySelector(".js-mySelect-Container-" + e).innerHTML = this.innerHTML, s.selects[e].value = this.getAttribute("data-value"), s.hideLists(), s.events.change ? s.events.change(e) : null;
          }, !1);
        }), i.appendChild(c), i.appendChild(a), e.wrappers[n].appendChild(i), e.lists.push(a);
      });
    } }, { key: "hideLists", value: function value() {
      this.lists.forEach(function (e) {
        e.previousSibling.classList.remove("js-mySelect-Container--open"), e.classList.remove("js-mySelect-List--visible");
      });
    } }, { key: "on", value: function value(e, t) {
      this.events[e] = t.bind(this);
    } }]), e);
})();exports["default"] = Select, module.exports = exports["default"];

},{}]},{},[1])
//# sourceMappingURL=data:application/json;base64,
